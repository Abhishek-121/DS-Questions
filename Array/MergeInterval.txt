vector<vector<int>> merge(vector<vector<int>>& intervals) {
        sort(intervals.begin(),intervals.end());
        vector<int>start = intervals[0];
        vector<vector<int>>res;
        for(int i=1;i<intervals.size();i++){
            //Overlapping condition
            if(intervals[i][0]<=start[1]){
                start[1] = max(start[1],intervals[i][1]);
            }
            else{
                res.push_back(start);
                start = intervals[i];
            }
        }
        res.push_back(start);
        return res;
    }


# Method 2

vector<vector<int>> merge(vector<vector<int>>& intervals) {
        vector<vector<int>> res;
    sort(intervals.begin(),intervals.end());
    for(int i=0;i<intervals.size();i++)
    {
        if(i!=intervals.size()-1&&intervals[i][1]>=intervals[i+1][0])
        {
            intervals[i+1][0]=min(intervals[i][0],intervals[i+1][0]);
            intervals[i+1][1]=max(intervals[i][1],intervals[i+1][1]);
        }
        else
            res.push_back(intervals[i]);
    }
    return res;
    }