int getMinDiff(int arr[], int n, int k) {
        if(n == 1)
            return 0;
        sort(arr,arr+n);
        int ans = arr[n-1]-arr[0];
        //Corner Case
        int small = arr[0]+k;
        int large = arr[n-1]-k;
        if(small>large){
            swap(small,large);
        }
        //Traversing the remaining element by using Greedy Approach
        for(int i=1;i<n-1;i++){
            int add = arr[i]+k;
            int sub = arr[i]-k;
            if(sub>=small || add <= large)
                continue;
            if(large-sub<=add-small)
                small = sub;
            
            else
                large = add;
            
        }
        return min(ans,large-small);
    }