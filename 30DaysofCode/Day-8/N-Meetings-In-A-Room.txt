#include <bits/stdc++.h>
using namespace std;

struct meeting{
    int index,start,finish;
};

bool compare(meeting m1,meeting m2){
    return m1.finish<m2.finish;
}

int main() {
	int t;
	cin>>t;
	while(t>0){
	    int n;
	    cin>>n;
	    meeting arr[n];
	    for(int i=0;i<n;i++){
	        cin>>arr[i].start;
	        arr[i].index =i+1;
	    }
	    for(int i=0;i<n;i++)
	        cin>>arr[i].finish;
	    sort(arr,arr+n,compare);
	    int i=0;
	    for(int j=0;j<n;j++){
	        if(arr[j].start>=i){
	            cout<<arr[j].index<<" ";
	            i = arr[j].finish;
	        }
	    }
	    cout<<endl;
	    t--;
	}
	return 0;
}

#Method 2

bool activityCompare(Activitiy s1, Activitiy s2) 
{ 
    return (s1.finish < s2.finish); 
} 
  

void printMaxActivities(Activitiy arr[], int n) 
{ 
    // Sort jobs according to finish time 
    sort(arr, arr+n, activityCompare);  
  
    // The first activity always gets selected 
    int i = 0; 
    cout << "(" << arr[i].start << ", " << arr[i].finish << "), "; 
  
    for (int j = 1; j < n; j++) 
    { 
      // If this activity has start time greater than or 
      // equal to the finish time of previously selected 
      // activity, then select it 
      if (arr[j].start >= arr[i].finish) 
      { 
          cout << "(" << arr[j].start << ", "
              << arr[j].finish << "), "; 
          i = j; 
      } 
    } 
} 
