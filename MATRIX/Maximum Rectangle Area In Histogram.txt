long long getMaxArea(long long arr[], int n){
    
    stack<int>s;
    long long left[n],right[n];
    
    
    for(int i=0;i<n;i++){
        if(s.empty()){
            left[i] = 0;
            s.push(i);
        }
        else{
            while(!s.empty() && arr[s.top()]>=arr[i])
                s.pop();
            left[i] = s.empty()? 0 : s.top()+1;
            s.push(i);
        }
    }
    while(!s.empty())
        s.pop();
        
    for(int i=n-1;i>=0;i--){
        if(s.empty()){
            right[i] = n-1;
            s.push(i);
        }
        else{
            while(!s.empty() && arr[s.top()]>=arr[i])
                s.pop();
            right[i] = s.empty()?n-1:s.top()-1;
            s.push(i);
        }
    }
    long long area = 0;
    for(int i=0;i<n;i++){
        area = max(area,arr[i]*(right[i]-left[i]+1));
    }
    return area;
}