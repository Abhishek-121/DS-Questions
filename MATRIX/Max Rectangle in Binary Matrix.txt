int histogram(int arr[], int m){
    int area =0;
    int left[m],right[m];
    stack<int>s;
    for(int i=0;i<m;i++){
        if(s.empty()){
            left[i] = 0;
            s.push(i);
        }
        else{
        while(!s.empty() && arr[s.top()]>=arr[i])
            s.pop();
        left[i] = s.empty() ? 0 : s.top()+1;
        s.push(i);
        }
    }
    while(!s.empty())
        s.pop();
        
    for(int i=m-1;i>=0;i--){
        if(s.empty()){
            right[i] = m-1;
            s.push(i);
        }
        else{
        while(!s.empty() && arr[s.top()]>=arr[i])
            s.pop();
        right[i] = s.empty() ? m-1 : s.top()-1;
        s.push(i);
        }
    }
    
    for(int i=0;i<m;i++)
        area = max(area,(right[i]-left[i]+1)*arr[i]);
    
    return area;
}

/*You are required to complete this method*/
int maxArea(int M[MAX][MAX], int n, int m) {
    
    int res = histogram(M[0],m);
    for(int i=1;i<n;i++){
        for(int j=0;j<m;j++)
            if(M[i][j])
                M[i][j] += M[i-1][j];
                
    res = max(res,histogram(M[i],m));
    }
    return res;
}